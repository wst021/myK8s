---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels:
    app: tomcat
  name: tomcat
  namespace: scm
  resourceVersion: '715566'
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: tomcat
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/restartedAt: '2023-09-15T20:43:56+08:00'
      creationTimestamp: null
      labels:
        app: tomcat
        pod-template-hash: 5d7d648d59
    spec:
      containers:
        - image: 'daocloud.io/library/tomcat:8.5.57'
          imagePullPolicy: IfNotPresent
          name: tomcat
          ports:
            - containerPort: 8080
              protocol: TCP
          resources:
            requests:
              memory: 1Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
    - lastTransitionTime: '2023-09-15T09:50:42Z'
      lastUpdateTime: '2023-09-15T13:26:54Z'
      message: ReplicaSet "tomcat-5d7d648d59" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: 'True'
      type: Progressing
    - lastTransitionTime: '2023-12-10T11:28:52Z'
      lastUpdateTime: '2023-12-10T11:28:52Z'
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: 'True'
      type: Available
  observedGeneration: 7
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1

---
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  labels:
    app: tomcat
  name: tomcat
  namespace: scm
  resourceVersion: '346858'
spec:
  clusterIP: 10.96.106.12
  externalTrafficPolicy: Cluster
  ports:
    - nodePort: 31514
      port: 19090
      protocol: TCP
      targetPort: 8080
  selector:
    app: tomcat
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations: {}
  name: tomcat
  namespace: scm
  resourceVersion: '715766'
spec:
  ingressClassName: myingress
  rules:
    - host: itwst.com
      http:
        paths:
          - backend:
              service:
                name: tomcat
                port:
                  number: 19090
            path: /
            pathType: Prefix
status:
  loadBalancer:
    ingress:
      - ip: 192.168.59.158
      - ip: 192.168.59.159

